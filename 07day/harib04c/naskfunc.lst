     1                                  ; naskfunc
     2                                  ; TAB=4
     3                                  
     4                                  ;[FORMAT "WCOFF"]				; オブジェクトファイルを作るモード ; NASMではエラーが出るのでこの行削除
     5                                  [BITS 32]						; 32ビットモード用の機械語を作らせる
     6                                  
     7                                  
     8                                  ; オブジェクトファイルのための情報
     9                                  
    10                                  ;[FILE "naskfunc.nas"]			; ソースファイル名情報 ; NASMではエラーが出るのでこの行削除
    11                                  
    12                                  		GLOBAL	io_hlt			; このプログラムに含まれる関数名;NASMではエラーが出るので修正
    13                                  		GLOBAL	io_cli,io_sti,io_stihlt	;間をあけない
    14                                  		GLOBAL	io_in8,io_in16,io_in32
    15                                  		GLOBAL	io_out8,io_out16,io_out32
    16                                  		GLOBAL	io_load_eflags,io_store_eflags
    17                                  		GLOBAL	load_gdtr,load_idtr
    18                                  		GLOBAL	asm_inthandler21,asm_inthandler27,asm_inthandler2c
    19                                  		EXTERN	inthandler21,inthandler27,inthandler2c
    20                                  
    21                                  
    22                                  
    23                                  ; 以下は実際の関数
    24                                  
    25                                  [SECTION .text]		; オブジェクトファイルではこれを書いてからプログラムを書く
    26                                  
    27                                  io_hlt:	; void io_hlt(void);	; NASMではエラーが出るので修正
    28 00000000 F4                      		HLT
    29 00000001 C3                      		RET
    30                                  
    31                                  io_cli:	; void io_cli(void);	;割り込み禁止
    32 00000002 FA                      		CLI
    33 00000003 C3                      		RET
    34                                  
    35                                  io_sti:	; void io_sti(void);	;割り込み許可
    36 00000004 FB                      		STI
    37 00000005 C3                      		RET
    38                                  
    39                                  io_stihlt:	; void io_stihlt(void);
    40 00000006 FB                      		STI
    41 00000007 F4                      		HLT
    42 00000008 C3                      		RET
    43                                  
    44                                  io_in8: ; int io_in8(int port);
    45 00000009 8B542404                		MOV		EDX,[ESP+4]		;port
    46 0000000D B800000000              		MOV 	EAX,0
    47 00000012 EC                      		IN 		AL,DX
    48 00000013 C3                      		RET
    49                                  
    50                                  io_in16: ; int io_in16(int port);
    51 00000014 8B542404                		MOV		EDX,[ESP+4]		;port
    52 00000018 B800000000              		MOV 	EAX,0
    53 0000001D EC                      		IN 		AL,DX
    54 0000001E C3                      		RET
    55                                  
    56                                  io_in32: ; int io_in32(int port);
    57 0000001F 8B542404                		MOV		EDX,[ESP+4]		;port
    58 00000023 EC                      		IN 		AL,DX
    59 00000024 C3                      		RET
    60                                  
    61                                  io_out8: ; void io_out8(int port, int data);
    62 00000025 8B542404                		MOV		EDX,[ESP+4] 	;port
    63 00000029 8A442408                		MOV		AL,[ESP+8]		;data
    64 0000002D EE                      		OUT		DX,AL
    65 0000002E C3                      		RET
    66                                  
    67                                  io_out16: ; void io_out16(int port, int data);
    68 0000002F 8B542404                		MOV 	EDX,[ESP+4]		;port
    69 00000033 8B442408                		MOV 	EAX,[ESP+8]		;data
    70 00000037 66EF                    		OUT		DX,AX
    71 00000039 C3                      		RET
    72                                  
    73                                  io_out32: ; void io_out32(int port, int data);
    74 0000003A 8B542404                		MOV		EDX,[ESP+4]
    75 0000003E 8B442408                		MOV		EAX,[ESP+8]
    76 00000042 EF                      		OUT		DX,EAX
    77 00000043 C3                      		RET
    78                                  
    79                                  io_load_eflags: ; int io_load_eflags(void);
    80 00000044 9C                      		PUSHFD					; PUSH EFLAGS
    81 00000045 58                      		POP		EAX
    82 00000046 C3                      		RET
    83                                  
    84                                  io_store_eflags: ; void io_store_eflags(int eflags);
    85 00000047 8B442404                		MOV		EAX,[ESP+4]
    86 0000004B 50                      		PUSH	EAX
    87 0000004C 9D                      		POPFD					;POP EFLAGSという意味
    88 0000004D C3                      		RET
    89                                  
    90                                  load_gdtr:		; void load_gdtr(int limit, int addr);
    91 0000004E 668B442404              		MOV		AX,[ESP+4]		; limit
    92 00000053 6689442406              		MOV		[ESP+6],AX
    93 00000058 0F01542406              		LGDT	[ESP+6]
    94 0000005D C3                      		RET
    95                                  
    96                                  load_idtr:		; void load_idtr(int limit, int addr);
    97 0000005E 668B442404              		MOV		AX,[ESP+4]		; limit
    98 00000063 6689442406              		MOV		[ESP+6],AX
    99 00000068 0F015C2406              		LIDT	[ESP+6]
   100 0000006D C3                      		RET
   101                                  
   102                                  asm_inthandler21:
   103 0000006E 06                      		PUSH	ES
   104 0000006F 1E                      		PUSH	DS
   105 00000070 60                      		PUSHAD
   106 00000071 89E0                    		MOV		EAX,ESP
   107 00000073 50                      		PUSH	EAX
   108 00000074 668CD0                  		MOV		AX,SS
   109 00000077 8ED8                    		MOV		DS,AX
   110 00000079 8EC0                    		MOV		ES,AX
   111 0000007B E8(00000000)            		CALL	inthandler21
   112 00000080 58                      		POP		EAX
   113 00000081 61                      		POPAD
   114 00000082 1F                      		POP		DS
   115 00000083 07                      		POP		ES
   116 00000084 CF                      		IRETD
   117                                  
   118                                  asm_inthandler27:
   119 00000085 06                      		PUSH	ES
   120 00000086 1E                      		PUSH	DS
   121 00000087 60                      		PUSHAD
   122 00000088 89E0                    		MOV		EAX,ESP
   123 0000008A 50                      		PUSH	EAX
   124 0000008B 668CD0                  		MOV		AX,SS
   125 0000008E 8ED8                    		MOV		DS,AX
   126 00000090 8EC0                    		MOV		ES,AX
   127 00000092 E8(00000000)            		CALL	inthandler27
   128 00000097 58                      		POP		EAX
   129 00000098 61                      		POPAD
   130 00000099 1F                      		POP		DS
   131 0000009A 07                      		POP		ES
   132 0000009B CF                      		IRETD
   133                                  
   134                                  asm_inthandler2c:
   135 0000009C 06                      		PUSH	ES
   136 0000009D 1E                      		PUSH	DS
   137 0000009E 60                      		PUSHAD
   138 0000009F 89E0                    		MOV		EAX,ESP
   139 000000A1 50                      		PUSH	EAX
   140 000000A2 668CD0                  		MOV		AX,SS
   141 000000A5 8ED8                    		MOV		DS,AX
   142 000000A7 8EC0                    		MOV		ES,AX
   143 000000A9 E8(00000000)            		CALL	inthandler2c
   144 000000AE 58                      		POP		EAX
   145 000000AF 61                      		POPAD
   146 000000B0 1F                      		POP		DS
   147 000000B1 07                      		POP		ES
   148 000000B2 CF                      		IRETD
